<?xml version="1.0" encoding="UTF-8"?>

<project name="CakePHP application" default="build">
 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,migrations,phpunit-ci"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,migrations,phpunit-ci"/>

 <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
  <delete dir="${basedir}/build/phpdox"/>
 </target>

 <target name="prepare" depends="clean" description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
 </target>

 <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/app">
    <include name="**/*.php" />
    <exclude name="**/Plugin/**/*.php" />
    <exclude name="**/Vendor/**/*.php" />
    <modified>
      <param name="cache.cachefile" value="${basedir}/build/cache.properties"/>
      <param name="algorithm.algorithm" value="SHA"/>
    </modified>
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg value="--exclude" />
   <arg value="Plugin" />
   <arg value="--exclude" />
   <arg value="Vendor" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg value="--ignore=${basedir}/app/Plugin,${basedir}/app/Vendor" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/app" />
   <arg value="text" />
   <arg value="codesize,controversial,design" />
   <arg value="--exclude" />
   <arg value="${basedir}/app/Plugin,${basedir}/app/Vendor" />
  </exec>
 </target>

 <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/app" />
   <arg value="xml" />
   <arg value="codesize,controversial,design" />
   <arg value="--exclude" />
   <arg value="${basedir}/app/Plugin,${basedir}/app/Vendor" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=Tyrell" />
   <arg value="--extensions=php" />
   <arg value="--ignore=${basedir}/app/Config,${basedir}/app/Plugin,${basedir}/app/Test,${basedir}/app/Vendor" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=Tyrell" />
   <arg value="--extensions=php" />
   <arg value="--ignore=${basedir}/app/Config,${basedir}/app/Plugin,${basedir}/app/Test,${basedir}/app/Vendor" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg value="--exclude" />
   <arg value="${basedir}/app/Plugin" />
   <arg value="--exclude" />
   <arg value="${basedir}/app/Vendor" />
   <arg path="${basedir}/app" />
  </exec>
 </target>

 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox">
    <arg value="-f" />
    <arg value="${basedir}/build/phpdox.xml" />
  </exec>
 </target>

 <target name="migrations" description="Run all migrations by CakePHP Migrations Plugin">
   <exec executable="${basedir}/app/Console/cake">
     <arg value="Migrations.migration" />
     <arg value="run" />
     <arg value="all" />
   </exec>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit. Intended for usage on the command line before committing.">
   <exec executable="${basedir}/app/Console/cake">
     <arg value="test" />
     <arg value="app" />
     <arg value="AllTests" />
     <arg value="--configuration=${basedir}/build/phpunit.xml" />
   </exec>
 </target>

 <target name="phpunit-ci" description="Run unit tests with PHPUnit for the continuous integration server">
   <exec executable="${basedir}/app/Console/cake">
     <arg value="test" />
     <arg value="app" />
     <arg value="AllTests" />
     <arg value="--no-colors" />
     <arg value="--configuration=${basedir}/build/phpunit.xml" />
     <arg value="--coverage-clover=${basedir}/build/logs/clover.xml" />
     <arg value="--coverage-html=${basedir}/build/coverage" />
     <arg value="--log-junit=${basedir}/build/logs/junit.xml" />
   </exec>
 </target>

 <target name="fix-permissions" description="Fix permissions of application files">
  <chmod perm="g+w">
   <fileset dir="${basedir}/app/tmp"/>
  </chmod>
  <chmod perm="g+ws">
   <dirset dir="${basedir}/app/tmp"/>
  </chmod>
 </target>

 <target name="clear-cache" description="Clear application's cache files">
  <delete verbose="true">
   <fileset dir="${basedir}/app/tmp/cache">
    <include name="**/*"/>
    <exclude name="**/empty"/>
    <type type="file"/>
   </fileset>
  </delete>
 </target>

 <target name="composer-no-dev" description="Install dependencies by Composer">
  <exec executable="php" dir="${basedir}/app">
   <arg value="composer.phar"/>
   <arg value="self-update"/>
  </exec>
  <exec executable="php" dir="${basedir}/app">
   <arg value="composer.phar"/>
   <arg value="install"/>
   <arg value="--no-dev"/>
  </exec>
 </target>

 <target name="composer-dev" description="Install dependencies by Composer">
  <exec executable="php" dir="${basedir}/app">
   <arg value="composer.phar"/>
   <arg value="self-update"/>
  </exec>
  <exec executable="php" dir="${basedir}/app">
   <arg value="composer.phar"/>
   <arg value="install"/>
   <arg value="--dev"/>
  </exec>
 </target>

 <target name="compass-compile-pc" description="Compass Compile for PC">
   <exec executable="compass" dir="${basedir}/sass/pc">
     <arg value="compile" />
   </exec>
 </target>

 <target name="compass-compile-sp" description="Compass Compile for SP">
   <exec executable="compass" dir="${basedir}/sass/sp">
     <arg value="compile" />
   </exec>
 </target>

</project>
